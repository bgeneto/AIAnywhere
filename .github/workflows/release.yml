name: Release Build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # Use .NET 9 as in the PowerShell script

      - name: Get version from tag
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Clean previous builds
        run: |
          Remove-Item -Recurse -Force AIAnywhere-Distribution,AIAnywhere-Optimized -ErrorAction SilentlyContinue
          Remove-Item AIAnywhere-v*.zip -ErrorAction SilentlyContinue
        shell: pwsh

      - name: Build speed-optimized version
        run: |
          dotnet publish AIAnywhere.sln -c Release -r win-x64 --self-contained false `
            /p:PublishReadyToRun=true `
            /p:OptimizationPreference=Speed `
            /p:TieredCompilation=true `
            /p:TieredPGO=true `
            /p:ReadyToRunUseCrossgen2=true `
            /p:DebuggerSupport=false `
            /p:EnableEventPipeProfiler=false
        shell: pwsh

      - name: Create optimized distribution folder
        run: |
          New-Item -ItemType Directory -Name "AIAnywhere-Optimized" | Out-Null
          Copy-Item "bin\Release\net9.0-windows\win-x64\publish\*.exe" "AIAnywhere-Optimized\"
          Copy-Item "bin\Release\net9.0-windows\win-x64\publish\*.dll" "AIAnywhere-Optimized\"
          Copy-Item "bin\Release\net9.0-windows\win-x64\publish\*.json" "AIAnywhere-Optimized\"
          Copy-Item "bin\Release\net9.0-windows\win-x64\publish\*.ico" "AIAnywhere-Optimized\"
          Copy-Item "bin\Release\net9.0-windows\win-x64\publish\*.png" "AIAnywhere-Optimized\"
          if (Test-Path "README.md") { Copy-Item "README.md" "AIAnywhere-Optimized\" }
        shell: pwsh

      - name: Write INSTALL.txt
        run: |
          @"
AI Anywhere - Installation Instructions
==========================================

- SYSTEM REQUIREMENTS:
  - Windows 10/11 (64-bit)
  - .NET 9.0 Runtime (Desktop) - Download link below if needed

- STEP 1: CHECK .NET INSTALLATION
  Try running "AIAnywhere.exe" first. If it works, you're all set!

  If you see an error about missing .NET:

    1. Download .NET 9.0 Desktop Runtime:
       https://dotnet.microsoft.com/download/dotnet/9.0
    2. Install the "Desktop Runtime" (not SDK)
    3. Restart and run AIAnywhere.exe

- QUICK START:
  1. Extract all files to your preferred location
  2. Run "AIAnywhere.exe" or use "Check and Start.bat"
  3. Configure your AI settings in the system tray

Package Size: ~6MB (Lightweight/Optimized - requires .NET 9.0)

© 2025 Bernhard Enders - AI Anywhere v${{ env.VERSION }}
"@ | Out-File "AIAnywhere-Optimized\INSTALL.txt" -Encoding UTF8
        shell: pwsh

      - name: Write Check and Start.bat
        run: |
          @"
@echo off
title AI Anywhere - .NET Check & Start
echo Checking for .NET 9.0 Runtime...
dotnet --list-runtimes | findstr "Microsoft.WindowsDesktop.App 9." >nul
if %errorlevel% == 0 (
    echo ✅ .NET 9.0 is installed! Starting AI Anywhere...
    start "" "AIAnywhere.exe"
    echo AI Anywhere started in system tray.
) else (
    echo ❌ .NET 9.0 Desktop Runtime required.
    echo Download from: https://dotnet.microsoft.com/download/dotnet/9.0
    set /p choice="Open download page? (y/n): "
    if /i "%choice%"=="y" start "" "https://dotnet.microsoft.com/download/dotnet/9.0"
)
pause
"@ | Out-File "AIAnywhere-Optimized\Check and Start.bat" -Encoding ASCII
        shell: pwsh

      - name: Zip optimized distribution
        run: Compress-Archive -Path "AIAnywhere-Optimized\*" -DestinationPath "AIAnywhere-v${{ env.VERSION }}-Optimized.zip" -CompressionLevel Optimal -Force
        shell: pwsh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: AIAnywhere-v${{ env.VERSION }}-Optimized.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
